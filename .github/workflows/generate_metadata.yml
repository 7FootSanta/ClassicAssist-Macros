name: Generate Metadata
on:
  push:
    branches: [ master ]
jobs:
  build:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.head_ref }}
    - name: Generate Metadata
      run: |
        Set-Location Macros

        $objs = Get-Content -Path "metadata.json" | ConvertFrom-Json

        $files = (Get-ChildItem . -Recurse -Filter *.py | Resolve-Path -Relative)
        $filespsobject = @()
        foreach ( $file in $files ) {
            $f = Get-ItemProperty $file
            if (!($f -is [System.IO.DirectoryInfo])) {
                $array = $file.split("\")  | select-object -skip 1 | select-object -SkipLast 1

                $names = @("Name", "Description", "Author", "Shard", "Era")

                $item = New-Object -Typename PSObject

                foreach ( $name in $names ) {

                    $regex = "^#\s$($name):\s(.*)$"
                    $m = (select-string -Path $file -Pattern $regex )
                    if ( $m ) {
                        $item | add-member -MemberType NoteProperty -Name $name -value $m.Matches.Groups[1].Value
                    }
                }

                $existing = [System.Linq.Enumerable]::FirstOrDefault($objs, [Func[object, bool]] { param($x) $x.FileName -eq (($file) -replace "\.\\", "") })

                $guid = (new-guid).Guid

                if ($null -ne $existing) {
                    $guid = $existing.Id
                }

                if ($null -eq $existing -Or $null -eq $existing.ModifiedDate) {
                    $lastmod = $f.LastWriteTime.ToString("o")
                }
                else {
                    $lastmod = $existing.ModifiedDate
                }

                $item | add-member -MemberType NoteProperty -Name Id -value $guid
                $item | add-member -MemberType NoteProperty -Name Categories -value $array
                $item | add-member -MemberType NoteProperty -Name FileName -value (($file) -replace "\.\\", "")
                $item | add-member -MemberType NoteProperty -Name Size -value $f.Length
                $item | add-member -MemberType NoteProperty -Name SHA1 -value (get-filehash -path $f.FullName -Algorithm sha1).Hash
                $item | add-member -MemberType NoteProperty -Name ModifiedDate -value $lastmod

                $filespsobject += $item
            }

            $json = $filespsobject | convertto-json
        }
        $json | Out-File metadata.json -Encoding utf8
      shell: powershell
    - name: Add changes
      run: |
        git add *
        git config --global user.name 'Metadata Generator'
        git config --global user.email 'reetus@users.noreply.github.com'
        git commit -am "Generate metadata..."
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        force: true
